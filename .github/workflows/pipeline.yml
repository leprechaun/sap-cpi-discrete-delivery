# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: pipeline
on:
  workflow_dispatch:
  push:

jobs:
# Unit test
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: 'Run tests with Gradle'
        run: |
          cd packages/HelloWorld/Main/

          ./gradlew clean test

# Update designtime
  upload-helloworld-main:
    runs-on: ubuntu-latest
    needs: tests
    container:
      image: engswee/flashpipe:latest
    steps:
      - uses: actions/checkout@v4

      - name: "Install JQ & YQ"
        run: |
          apt-get update
          apt-get install -y jq wget curl

      - name: Install YQ
        run: |
          export VERSION=v4.2.0
          export BINARY=yq_linux_amd64

          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | tar xz && mv ${BINARY} /usr/bin/yq

      - name: Install HURL
        run: |

          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/6.1.1/hurl_6.1.1_amd64.deb
          dpkg -i hurl_6.1.1_amd64.deb

      - name: Check versions of the Artifact
        run: |
          export LOCAL_VERSION="$(cat packages/HelloWorld/Main/META-INF/MANIFEST.MF | yq -r '."Bundle-Version"'")

          hurl \
            --variable API_HOST=f69313cftrial.it-cpitrial03.cfapps.ap21.hana.ondemand.com \
            --variable OAUTH_HOST=f69313cftrial.authentication.ap21.hana.ondemand.com \
            --variable OAUTH_CLIENT_ID="${{ secrets.DEV_CLIENT_ID }}" \
            --variable OAUTH_CLIENT_SECRET="${{ secrets.DEV_CLIENT_SECRET }}" \
            api-usage/get-package-integration-artifact.hurl | jq -r .d.Version > /tmp/remote-version

          REMOTE_VERSION="$(cat /tmp/remote-version)"

          ./auto/compare-versions $LOCAL_VERSION $REMOTE_VERSION

      - name: 'Upload HelloWorld/Main'
        uses: engswee/flashpipe-action/update/artifact@v1
        with:
          tmn-host: f69313cftrial.it-cpitrial03.cfapps.ap21.hana.ondemand.com
          oauth-host: f69313cftrial.authentication.ap21.hana.ondemand.com
          oauth-clientid: ${{ secrets.DEV_CLIENT_ID }}
          oauth-clientsecret: ${{ secrets.DEV_CLIENT_SECRET }}
          dir-artifact-relative: packages/HelloWorld/Main/
          package-id: HelloWorld
          artifact-id: Main
          file-param: packages/HelloWorld/Main/src/main/resources/parameters.DEV.prop
          debug: true

  # Deploy to runtime
  deploy-helloworld-main:
    runs-on: ubuntu-latest
    needs: upload-helloworld-main
    container:
      image: engswee/flashpipe:latest
    steps:
      - uses: actions/checkout@v4

      - name: 'Deploy the main IntegrationFlow in HelloWorld'
        uses: engswee/flashpipe-action/deploy@v1
        with:
          tmn-host: f69313cftrial.it-cpitrial03.cfapps.ap21.hana.ondemand.com
          oauth-host: f69313cftrial.authentication.ap21.hana.ondemand.com
          oauth-clientid: ${{ secrets.DEV_CLIENT_ID }}
          oauth-clientsecret: ${{ secrets.DEV_CLIENT_SECRET }}
          artifact-ids: Main
          debug: true
